# Documentation can be found here:
#
# https://github.com/jdurbin/wekaMine/wiki
#

============ PRE INSTALLED ON SOME MACHINES ===============
# wekaMine is pre-installed on certain UCSC CBSE/SOE machines.  
# On soe machines bop, tap, etc., you can add the right path and 
# other environment variables by doing:

source /projects/sysbio/apps/wekamine_env.sh

# On hgwdev, ku, etc., you can pick up these variables by doing:

source /cluster/bin/wekamine_env.sh 

# Make sure you have the required tools in your path.  These are Java, Groovy, and Ant. 
# On hgwdev,ku, etc., you can pick these up with:

source /cluster/bin/jvmtools.sh 

On bop,tap, etc. java, groovy, and ant should already be in your path. 

# ============ INSTALLATION ===============
# If you need to install wekaMine somewhere it is not pre-installed follow these instructions. 
# The prerequisites for wekaMine are Java, Groovy, and Ant, which can be downloaded and installed
# however you like. 

# Somewhere, doesn't matter where, do:
git clone git://github.com/jdurbin/durbinlib.git
cd durbinlib
ant install
export PATH=$PATH:{pathtodurbinlib}/durbinlib/scripts
export CLASSPATH = "{pathtodurbinlib}/target/jar/*"

# Note that the scripts directory adds a number of useful non-wekaMine scripts, such as 
# csvsql, viewtab, cutbyname, etc. 

# Somewhere, doesn't matter where, do:
git clone git://github.com/jdurbin/wekaMine.git
export PATH=$PATH:{pathtowekaMine}/wekaMine/

# The following environment variable is not strictly necessary, but it is 
# useful to give the JDK all the ram it might need.  Also, -server improves 
# performance for long-running jobs by doing more JIT compilation at a very small 
# cost to start-up time.  Almost everything I do is long running (> 30 seconds) so 
# this is a good tradeoff. 
export JAVA_OPTS="-Xmx5000m -server"


#==============   GETTING STARTED ===============

# Run a set of experiments, trying out a couple of classifiers and 
# a couple of feature selection cutoffs...

	wmModelSelection -c cfg/vijver2002.cfg -d data/vijver2002.tab -i data/vijver2002.clinical.tab -o results/test

# To create a model from the best result from the experiments first extract the top result:

	wmBestModels -R results/test-1.0.summary.csv > results/best.csv

# Then build a model using this result:

	wmSaveModel -o models/test -d data/vijver2002.tab -i data/vijver2002.clinical.tab -R results/best.csv 
 
# Finally, to classify a dataset based on this saved model, do (here trivially classifying the 
# training data):

	wmClassify -m models/test_0.wmm -d data/vijver2002.tab -o results/classifications.tab

# If you want to compare these classifications with some known values, simply pass the known values
# in a clinical tab data format and it'll output predictions, how it compares with actual, and some
# statistics (again, in this example trivially classifying training input, but could be anything):

	wmClassify -m models/test_0.wmm -i data/vijver2002.clinical.tab -d data/vijver2002.tab -o results/classifications_compare.txt
	
# You can perform stand-alone attribute selection on a data and meta-data file using 
# wmAttributeSelection by specifying the attribute selection method with the first seven fields 
# as seen in the results file, putting in 'none' for the classifier.  wmAttributeSelection outputs
# a new datafile with only the selected attributes in it. 

	wmAttributeSelection -d data/vijver2002.tab -i data/vijver2002.clinical.tab -o vijver.gainratio.tab -E 'none,weka.attributeSelection.GainRatioAttributeEval,weka.attributeSelection.Ranker,100,none,TIMEsurvival,2;2.1'
	
# You may want to merely see the ranking of attributes that results from some attribute ranking 
# method, like information gain.  This can be done with wmAttributeRank:

	wmAttributeRank -d data/vijver2002.tab -i data/vijver2002.clinical.tab -E 'none,weka.attributeSelection.GainRatioAttributeEval,weka.attributeSelection.Ranker,100,none,TIMEsurvival,2;2.1'


# These steps are encapsulated in a makefile in this directory.  Simply do:

make test



# There are a number of other scripts in wekaMine. Each has help that can be invoked with -h
	