# Documentation can be found here:
#
# https://github.com/jdurbin/wekaMine/wiki
#

# Make sure you have the required tools in your path.  These are Java, Groovy, and Ant. 
# On UCSC CBSE machines you can do this to pick up these tools:
source /inside/home/common/jvmtools.sh

# ============ INSTALLATION ===============
# Somewhere, doesn't matter where, do:
git clone git://github.com/jdurbin/durbinlib.git
cd durbinlib
ant install

# Somewhere, doesn't matter where, do:
mkdir src
cd src
git clone git://github.com/jdurbin/wekaMine.git
export PATH=$PATH:src/wekaMine/


# Run a set of experiments, trying out a couple of classifiers and 
# a couple of feature selection cutoffs...

	wekaMine -c cfg/vijver2002.cfg -d data/vijver2002.tab -i data/vijver2002.clinical.tab -o results/test

# To create a model from the best result from the experiments first extract the top result:

	wmBestModels -R results/test-1.0.summary.csv > results/best.csv

# Then build a model using this result:

	wmSaveModel -o models/test -d data/vijver2002.tab -i data/vijver2002.clinical.tab -R results/best.csv 
 
# Finally, to classify a dataset based on this saved model, do (here trivially classifying the 
# training data):

	wmClassify -m models/test_0.wmm -d data/vijver2002.tab -o results/classifications.txt

# If you want to compare these classifications with some known values, simply pass the known values
# in a clinical tab data format and it'll output predictions, how it compares with actual, and some
# statistics (again, in this example trivially classifying training input, but could be anything):

	wmClassify -m models/test_0.wmm -i data/vijver2002.clinical.tab -d data/vijver2002.tab -o results/classifications_compare.txt
	
# You can perform stand-alone attribute selection on a data and meta-data file using 
# wmAttributeSelection by specifying the attribute selection method with the first seven fields 
# as seen in the results file, putting in 'none' for the classifier.  wmAttributeSelection outputs
# a new datafile with only the selected attributes in it. 

	wmAttributeSelection -d data/vijver2002.tab -i data/vijver2002.clinical.tab -o vijver.gainratio.tab -E 'none,weka.attributeSelection.GainRatioAttributeEval,weka.attributeSelection.Ranker,100,none,TIMEsurvival,2;2.1'
	
# You may want to merely see the ranking of attributes that results from some attribute ranking 
# method, like information gain.  This can be done with wmAttributeRank:

	wmAttributeRank -d data/vijver2002.tab -i data/vijver2002.clinical.tab -E 'none,weka.attributeSelection.GainRatioAttributeEval,weka.attributeSelection.Ranker,100,none,TIMEsurvival,2;2.1'

# There are a number of other scripts in wekaMine.  Each has 
	